#!/bin/bash
#This shell script uses sqlite databases provided by mdic and returns the meaning 
#the goal was a fast used dictionary for terminal
#TODO add -v for version and -c for a count of how many words you looked up
#TODO use getops instead of current switch system
#TODO add -a to enable a word and its meaning to be added to dictionary when it doesn't exist or maybe to correct it.
function check_history
{
  #we are going to see if you were stupid enough to look up the word many times and remind of of that
  #this may not work perfectly for multi part words
  declare -g lookups="0"
  lookups=$(grep -w -s "$words" "$HISTORY_FILE" | wc -l)
}
function check_and_print
{
  query="select wmean from word where wname='$words'"
  meaning=$(sqlite3 $DICT_PATH "$query;")
  meaning_persian=$(sqlite3 $DICT2_PATH "$query;")
  check_history
  if [ ! -z "$meaning" -a ! -z "$words" ]
  then
    if [ "$lookups" != "0" ]
    then
      echo "You have looked up this word $lookups times before."
    fi
    echo "$words" >> "$HISTORY_FILE"
    echo "$words means: $meaning"
  fi
  #for persian meaning now
  if [ ! -z "$meaning" -a ! -z "$words" ]
  then
    mp=`echo $meaning_persian | tr -d \&`
    zenity --text="$mp" --info
#    echo $meaning_persian
  fi
    exit
}
declare -g DICT_PATH="/usr/share/english-english.m2"
declare -g DICT2_PATH="/usr/share/german-persian.m2"
declare -g TMP_FILE="/tmp/search"
declare -g ISPELL="/usr/bin/ispell"
declare -g HISTORY_FILE="/home/$USER/.dic_history"
declare -g words
declare -g version="0.5"
#please note that spell checking was just added for fun. it is the funniest way you can do it.

if [ $# -eq "0" ]
then
	echo "Usage : dic [word]"
	echo "Remember you can use multiple words but they will be passed as one argument like: the great britain"
	exit
fi
if [ "$1" = "-s" ]
then
  SPELL="true"
  shift
fi
words="$@"
#query="select wmean from word where wname='$words'"
#meaning=$(sqlite3 $DICT_PATH "$query;")
#
#if [ ! -z "$meaning" ]
#then
#  echo "$words" >> $HISTORY_FILE
#  echo "$words means: $meaning"
#  exit
#fi
check_and_print

if [ "$SPELL" = "true" ]
then
  if [ -x "$ISPELL" ]
  then
    result_line=$(echo "$words" | ispell -a | head -2 | tail -1)
    result_char=$(echo $result_line | cut -d" " -f1 )
    if [ "$result_char" = "+" ]
    then
      words=$(echo $result_line | cut -d" " -f2)
      SPELL="false"
    elif [ "$result_char" = "&" ]
          then
              words=$(echo $result_line | cut -d\, -f1  | cut -d" " -f5)
              SPELL="false"
            fi
            #our job with ispell is finished here
  fi
  #we have to do spell check but we dont have ispell installed so we use dummy google method
  #this will probaby won't work for mutiple words but I have no idea it may :)
fi
if [ "$SPELL" = "true" ]
then
    url="www.google.com/search?q='$words'"
    w3m -dump_source $url > $TMP_FILE
    words=$(cat $TMP_FILE | grep -o -e 'search?hl=en\&amp;q=.[a-z]*.&amp;spell=1' | cut -d\= -f3 | cut -d\& -f1)
  fi
#google simetimes adds extra ' "" so we have to check first
words=$(echo $words | tr -d "'")
check_and_print
######################main ends here

